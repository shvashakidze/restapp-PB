{"version":3,"sources":["App.js","index.js"],"names":["RenderPersons","persons","searchName","length","style","liststyle","padding","filter","person","name","toLowerCase","includes","map","number","Filter","setSearchName","value","onChange","event","target","App","useState","setPersons","notes","setNotes","setNewNote","newName","setNewName","newNumber","setNewNumber","useEffect","console","log","axios","get","then","response","data","onSubmit","preventDefault","noteObject","content","date","Date","important","Math","random","post","concat","find","window","confirm","id","autoComplete","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAIMA,EAAe,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAC3B,OACED,EAAQE,OACR,oBAAIC,MAAO,CAACC,UAAW,OAAQC,QAAS,GAAxC,SACGL,EAAQM,QAAO,SAAAC,GAAM,OAAEA,EAAOC,KAAKC,cAAcC,SAAST,EAAWQ,kBAAgBE,KAAI,SAAAJ,GAAM,OACjG,+BAAuBA,EAAOC,KAA9B,IAAqCD,EAAOK,SAAnCL,EAAOC,WAKhB,uBAIFK,EAAQ,SAAC,GAA+B,IAA9BZ,EAA6B,EAA7BA,WAAYa,EAAiB,EAAjBA,cAC1B,OACE,sDACmB,uBAAOC,MAAOd,EACjCe,SAAU,SAACC,GAAD,OAASH,EAAcG,EAAMC,OAAOH,cAqInCI,EA/HH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRpB,EADQ,KACCqB,EADD,OAEYD,mBAAS,IAFrB,mBAERE,EAFQ,KAEDC,EAFC,OAGiBH,mBAAS,IAH1B,mBAGEI,GAHF,aAIgBJ,mBAAS,IAJzB,mBAIRK,EAJQ,KAICC,EAJD,OAKgBN,mBAAS,IALzB,mBAKVO,EALU,KAKCC,EALD,OAMkBR,mBAAS,IAN3B,mBAMVnB,EANU,KAMEa,EANF,KAUlBe,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACGC,IAAI,iCACJC,MAAK,SAAAC,GACJL,QAAQC,IAAI,qBACZV,EAAWc,EAASC,WAEvB,IACHN,QAAQC,IAAI,SAAU/B,EAAQE,OAAQ,SAsEpC,OACE,gCACE,2CACA,cAAC,EAAD,CAAQD,WAAYA,EAAYa,cAAeA,IAG/C,uBAAMuB,SA3DS,SAAApB,GACnBA,EAAMqB,iBACN,IAAMC,EAAa,CACjBC,QAASf,EACTgB,KAAM,IAAIC,KACVC,UAAWC,KAAKC,SAAW,IAG7Bb,IACGc,KAAK,8BAA+BP,GACpCL,MAAK,SAAAC,GACJZ,EAASD,EAAMyB,OAAOZ,EAASC,OAC/BZ,EAAW,IAEXM,QAAQC,IAAII,MAGAnC,EAAQgD,MAAK,SAAAzC,GAAM,OAAIA,EAAOC,OAASiB,GAAWlB,EAAOK,SAAWe,KAGjFsB,OAAOC,QAAP,UAAkBzB,EAAlB,mCAIFJ,EAAW,GAAD,mBACLrB,GADK,CAER,CAACQ,KAAMiB,EAASb,OAAQe,OAiCvB,UACA,2CACE,yCACQ,uBACJwB,GAAG,YACHpC,MAAOU,EACPT,SAzEY,SAACC,GACvBS,EAAWT,EAAMC,OAAOH,QAyEdqC,aAAa,UAIf,yCACM,uBACLD,GAAG,YACHpC,MAAOY,EACPX,SA/Ec,SAACC,GACxBW,EAAaX,EAAMC,OAAOH,QA+EjBqC,aAAa,WAIhB,8BACE,wBAAQC,KAAK,SAAb,sBAGJ,yCACA,cAAC,EAAD,CAAerD,QAASA,EAASC,WAAYA,QC9InDqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6c3a60f0.chunk.js","sourcesContent":["import React, { useState,  useEffect } from 'react'\nimport axios from 'axios'\nimport css from './index.css'\n\nconst RenderPersons =({persons, searchName})=>{\n     return(\n       persons.length ?\n       <ul style={{liststyle: 'none', padding: 0}}>\n        { persons.filter(person=>person.name.toLowerCase().includes(searchName.toLowerCase())).map(person=>(\n        <li key={person.name}>{person.name} {person.number}\n        </li>\n        )) }\n        </ul>\n        :\n        <p></p>\n        );\n};\n\nconst Filter =({searchName, setSearchName})=>{\n  return(\n    <div>\n    Filter shown with: <input value={searchName}\n    onChange={(event)=>setSearchName(event.target.value)}\n    />\n    </div>\n    );\n};\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ notes, setNotes ] = useState([]);\n  const [ newNotes, setNewNote ] = useState('');\n  const [ newName, setNewName ] = useState('');\n  const[newNumber, setNewNumber]= useState('');\n  const[searchName, setSearchName]= useState('');\n  \n//const focusName = useRef();\n\nuseEffect(() => {\n  console.log('effect')\n  axios\n    .get('http://localhost:3001/persons')\n    .then(response => {\n      console.log('promise fulfilled')\n      setPersons(response.data)\n    })\n}, [])\nconsole.log('render', persons.length, 'notes')\n\nconst clearInput = ()=>{\n  setNewName('');\n  setNewNumber('');\n  //focusName.current.focus();\n};\n\n\nconst handleNameChange =(event) =>{\n  setNewName(event.target.value);\n}\nconst handleNumberChange=(event)=>{\n  setNewNumber(event.target.value);   \n \n}\n\nconst handleSubmit = event => {\n  event.preventDefault()\n  const noteObject = {\n    content: newName,\n    date: new Date(),\n    important: Math.random() < 0.5,\n  }\n\n  axios\n    .post('http://localhost:3001/notes', noteObject)\n    .then(response => {\n      setNotes(notes.concat(response.data))\n      setNewNote('')\n\n      console.log(response)\n    })\n\n    const alert = persons.find(person => person.name  ===newName || person.number === newNumber)\n     \n     if(alert){\n     window.confirm(`${newName} is already added to phonebook`)\n     }else{\n   \n   \n   setPersons([\n     ...persons,\n     {name: newName, number: newNumber}\n     ]);\n\n     }\n}\n\n /*const handleSubmit = (event) => {\n   event.preventDefault();\n   axios.post('http://localhost:3001/persons', )\n   \nconst alert = persons.find(person => person.name  ===newName || person.number === newNumber)\n     \n     if(alert){\n     window.confirm(`${newName} is already added to phonebook`)\n     }else{\n   \n   \n   setPersons([\n     ...persons,\n     {name: newName, number: newNumber}\n     ]);\n\n     }\n     \n  }*/\n   \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter searchName={searchName} setSearchName={setSearchName}\n    \n      />\n      <form onSubmit={handleSubmit}>\n      <h2>Add a new</h2>\n        <div>\n          name: <input\n            id=\"nameinput\"\n            value={newName}\n            onChange={handleNameChange}\n            autoComplete='on'\n            //focusName={focusName}\n          />\n          </div>\n          <div>\n          numb: <input \n           id=\"nameinput\"\n           value={newNumber}\n           onChange={handleNumberChange}\n           autoComplete='off'\n           //focusName={focusName}\n           />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <RenderPersons persons={persons} searchName={searchName}/>\n    </div>\n  )\n}\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}